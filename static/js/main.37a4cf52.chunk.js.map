{"version":3,"sources":["index.js"],"names":["App","state","status","result","handleChange","bind","handleSubmit","x","k","p","Math","floor","r","cum","slice","reduce","acc","cur","event","this","setState","target","name","value","res","calcScore","toString","preventDefault","className","onSubmit","autoComplete","type","min","max","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uNAGMA,E,kDACF,aAAe,IAAD,8BACV,gBACKC,MAAQ,CAACC,OAAQ,EAAGC,OAAQ,sBACjC,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJV,E,6CAMd,SAAUE,GACN,IAAMC,EAAI,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnGC,EAAIC,KAAKC,MAAMJ,EAAI,IACnBK,EAAIL,EAAI,GACRM,EAAML,EAAEM,MAAM,EAAGL,GAAGM,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,GAC1D,OAAOP,KAAKC,MAAY,EAANE,GAAWD,EAAI,GAAKJ,EAAEC,GAAK,M,0BAEjD,SAAaS,GACTC,KAAKC,SAAL,eACKF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAG1C,SAAaL,GACT,IAAMM,EAAML,KAAKM,UAAUN,KAAKlB,MAAMC,QAAQwB,WAC9CP,KAAKC,SAAS,CACVjB,OAAQqB,IAEZN,EAAMS,mB,oBAEV,WACI,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,UAAf,SACI,sBACIC,SAAUV,KAAKb,aACfwB,aAAa,MAFjB,SAGI,uBACIR,KAAK,SACLS,KAAK,SAASC,IAAK,EAAGC,IAAK,KAC3BV,MAAOJ,KAAKlB,MAAMsB,MAClBW,SAAUf,KAAKf,mBAG3B,qBAAKwB,UAAU,SAAf,SACKT,KAAKlB,MAAME,gB,GAzCdgC,IAAMC,WAgDxBC,IAASC,OACL,cAACtC,EAAD,IACAuC,SAASC,eAAe,W","file":"static/js/main.37a4cf52.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {status: 0, result: '未計算'};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    calcScore(x) {\n        const k = [5, 8, 10, 13, 16, 18, 21, 24, 26, 28, 29, 30, 31, 33, 34, 35, 39, 41, 42, 43, 52, 55, 66, 68, 60];\n        const p = Math.floor(x / 50)\n        const r = x % 50;\n        const cum = k.slice(0, p).reduce((acc, cur) => acc + cur, 0);\n        return Math.floor(cum * 5 + (r + 1) * k[p] / 10);\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n    handleSubmit(event) {\n        const res = this.calcScore(this.state.status).toString();\n        this.setState({\n            result: res\n        });\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <div className='Main'>\n                <div className='Control'>\n                    <form\n                        onSubmit={this.handleSubmit}\n                        autoComplete='off'>\n                        <input\n                            name='status'\n                            type='number' min={0} max={1200}\n                            value={this.state.value}\n                            onChange={this.handleChange} />\n                    </form>\n                </div>\n                <div className='Result'>\n                    {this.state.result}\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}