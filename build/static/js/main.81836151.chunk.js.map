{"version":3,"sources":["index.js"],"names":["App","state","status","rarity","uniqueLevel","skill","result","handleChange","bind","handleSubmit","x","k","p","Math","floor","r","cum","slice","reduce","acc","cur","this","calcStatus_","ret","Object","entries","calcStatus","calcUnique","calcSkill","toString","event","setState","target","name","value","calcScore","preventDefault","i","type","min","max","onChange","parseInt","skillPoint","desc","className","onSubmit","autoComplete","statusInput","skillInput","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81836151.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            status: [0, 0, 0, 0, 0],\n            rarity: 3,\n            uniqueLevel: 4,\n            skill: {\n                129: 0,\n                174: 0,\n                180: 0,\n                191: 0,\n                217: 0,\n                239: 0,\n                288: 0,\n                394: 0,\n                508: 0,\n                559: 0,\n            },\n            result: '未計算',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    calcStatus_(x) {\n        const k = [5, 8, 10, 13, 16, 18, 21, 24, 26, 28, 29, 30, 31, 33, 34, 35, 39, 41, 42, 43, 52, 55, 66, 68, 60];\n        const p = Math.floor(x / 50);\n        const r = x % 50;\n        const cum = k.slice(0, p).reduce((acc, cur) => acc + cur, 0);\n        return Math.floor(cum * 5 + (r + 1) * k[p] / 10);\n    }\n    calcStatus() {\n        return this.state.status.reduce(\n            (acc, cur) => acc + this.calcStatus_(cur), 0\n        )\n    }\n    calcUnique() {\n        const k = (this.state.rarity < 3)? 120: 170;\n        return k * this.state.uniqueLevel;\n    }\n    calcSkill() {\n        let ret = 0;\n        for (const [key, value] of Object.entries(this.state.skill)) {\n            ret += key * value;\n        }\n        return ret;\n    }\n    calcScore() {\n        const score = this.calcStatus() + this.calcUnique() + this.calcSkill();\n        return score.toString();\n    }\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    }\n    handleSubmit(event) {\n        this.setState({\n            result: this.calcScore(),\n        });\n        event.preventDefault();\n    }\n    statusInput(i) {\n        return (\n            <input\n                name={'status' + i.toString()}\n                type='number' min={0} max={1200}\n                onChange={(event) => {\n                    let status = this.state.status;\n                    status[i] = parseInt(event.target.value, 10);\n                    this.setState({ status: status });\n                }} />\n        );\n    }\n    skillInput(skillPoint, desc) {\n        return (\n            <div>\n                <input\n                    name={'skill' + skillPoint.toString()}\n                    type='number' min={0} max={10}\n                    value={this.state.skill[skillPoint]}\n                    onChange={(event) => {\n                        let skill = this.state.skill;\n                        skill[skillPoint] = parseInt(event.target.value, 10);\n                        this.setState({ skill: skill });\n                    }}\n                />\n                {skillPoint.toString() + ': ' + desc}\n            </div>\n        )\n    }\n    render() {\n        return (\n            <div className='Main'>\n                <div className='Control'>\n                    <form\n                        onSubmit={this.handleSubmit}\n                        autoComplete='off'>\n                            <div className='statusInput'>\n                                <label>ステータス</label>\n                                {this.statusInput(0)}\n                                {this.statusInput(1)}\n                                {this.statusInput(2)}\n                                {this.statusInput(3)}\n                                {this.statusInput(4)}\n                            </div>\n                            <div className='uniqueInput'>\n                                <label>星</label>\n                                <input\n                                    type='number'\n                                    name='rarity' min={1} max={5}\n                                    value={3}\n                                    onChange={this.handleChange} />\n                                <label>固有レベル</label>\n                                <input\n                                    type='number'\n                                    name='uniqueLevel' min={1} max={6}\n                                    value={4}\n                                    onChange={this.handleChange} />\n                            </div>\n                            <div className='skillInput'>\n                                {this.skillInput(129, '緑丸、集中力')}\n                                {this.skillInput(174, '緑二重丸')}\n                                {this.skillInput(180, '継承固有')}\n                                {this.skillInput(191, 'コツ丸')}\n                                {this.skillInput(217, '汎用')}\n                                {this.skillInput(239, '距離脚質丸、コツ二重丸')}\n                                {this.skillInput(288, '距離脚質二重丸')}\n                                {this.skillInput(394, 'コンセントレーション')}\n                                {this.skillInput(508, '汎用金')}\n                                {this.skillInput(559, '距離脚質金')}\n                            </div>\n                        <input type='submit' value='calc' />\n                    </form>\n                </div>\n                <div className='Result'>\n                    {this.state.result}\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}